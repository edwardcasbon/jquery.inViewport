/**
* inViewport: A jQuery plugin for the detection of HTML elements within the viewport
* Author: Edward Casbon
* Email: edward@edwardcasbon.co.uk
* URL: http://www.edwardcasbon.co.uk
* Version: 1.0
* Date: 26th March 2013
*
* Example usage:
* $("#elementID").inViewport(function(){
* 	$(this).html("I'm in the viewport");
* }, function(){
*	$(this).html("I'm no longer in the viewport");
* }); 
* Argument 1 is a callback function for when the element appears in the viewport.
* Argument 2 is a callback function for when the element disappears from the viewport.
**/(function(e){var t=[];e.fn.inViewport=function(n,r){return this.each(function(){$element=e(this);elTop=$element.offset().top;elLeft=$element.offset().left;elRight=elLeft+$element.outerWidth();elBottom=elTop+$element.outerHeight();elObject={element:this,elTop:elTop,elLeft:elLeft,elRight:elRight,elBottom:elBottom,inFunction:n,outFunction:r,currentStatus:"out"};t.push(elObject);inViewport=function(t){viewPortTop=e(window).scrollTop();viewPortBottom=viewPortTop+e(window).height();viewPortLeft=e(window).scrollLeft();viewPortRight=viewPortLeft+e(window).width();return t.elTop<viewPortBottom&&t.elLeft<viewPortRight&&t.elBottom>viewPortTop&&t.elRight>viewPortLeft};doCheck=function(){for(i=0;i<t.length;i++){theElement=t[i];if(inViewport(theElement)&&theElement.currentStatus!="in"){theElement.currentStatus="in";typeof theElement.inFunction=="function"&&theElement.inFunction.call(theElement.element)}else if(!inViewport(theElement)&&theElement.currentStatus!="out"){theElement.currentStatus="out";typeof theElement.outFunction=="function"&&theElement.outFunction.call(theElement.element)}}};e(window).scroll(doCheck).resize(doCheck);doCheck()})}})(jQuery);